@page "/"
@using BigBang1112.Gbx.Client.Services;
@using GBX.NET;
@using GbxToolAPI;
@using GbxToolAPI.Client;
@using MapViewerEngine.Shared;

@inject IToolManager ToolManager
@inject IWorkflowManager WorkflowManager
@inject NavigationManager NavMan

<PageTitle>Gbx Web Tools</PageTitle>

<div class="grid-container">
    <div class="grid-item">
        <p style="padding: 10px;margin-bottom: 10px;text-align: center;">Gbx Web Tools is now deprecated! It will be reformed to <a href="https://gbx.tools">gbx.tools</a> in 2025.</p>
        <ImportFile />
        <InputText @bind-Value="SearchValue" @oninput="OnSearchInput" class="search-bar" placeholder="Search..."></InputText>
    </div>
    <div class="grid-item">
        <h2>Tools</h2>
        <div class="list">
            @foreach (var item in ToolManager.GetToolFactories(searchValue))
            {
                <a href="tool/@item.Route" class="rectangle clickable">
                    <h3>
                        @item.Name

                        @if (!string.IsNullOrWhiteSpace(item.Authors))
                        {
                            <small>by @item.Authors</small>
                        }
                    </h3>
                    @if (!string.IsNullOrWhiteSpace(item.Description))
                    {
                        <p>@item.Description</p>
                    }
                </a>
            }
        </div>
    </div>
    <div class="grid-item">
        <h2 class="workflows">Workflows <img src="img/question.svg" alt="?" width="24" style="margin-top: 2px;" title="Workflow is a combination of tools with adjusted input and output."/></h2>
        <div class="list">
            @foreach (var item in WorkflowManager.GetWorkflows(searchValue))
            {
                <div class="rectangle delayed"> <!--href="workflow/@item.Route"-->
                    <span>Delayed :(</span>
                    <h3>@item.Name</h3>
                    @if (!string.IsNullOrWhiteSpace(item.Description))
                    {
                        <p>@item.Description</p>
                    }
                </div>
            }
        </div>
    </div>
</div>

<!--<p>@Hub.State</p>

<AuthorizeView>
    <NotAuthorized>
        <a href="login">Login</a>
    </NotAuthorized>
    <Authorized>
        <a href="logout">Logout</a>
    </Authorized>
</AuthorizeView>

<a href="superadmin">SuperAdmin</a>



<InputFile OnChange="LoadFiles" />

<button @onclick="PingAsync">Send important stuff</button>

<p>@response</p>-->

@code {
    private string response = "";
    private Node? node;

    private string searchValue = "";

    public string SearchValue
    {
        get => searchValue;
        set
        {
            searchValue = value;
        }
    }

    private void OnSearchInput(ChangeEventArgs e)
    {
        searchValue = e.Value?.ToString() ?? "";
    }

    protected override async Task OnInitializedAsync()
    {
        await WorkflowManager.LoadWorkflowsAsync();
    }
}
